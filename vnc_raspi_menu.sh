#! /bin/sh

# convenient functions to access a Raspi via VNC from a linux PC by "Internet Connection Sharing" via ethernet

# Prerequsites on host, eg. on fedora:
# $ sudo dnf install tigervnc  # pygobject python3-tools

# To start a vnc session manually:
# $ ssh pi@x.x.x.x vncserver :1 -geometry 1920x1080 -depth 24
# $ vncviewer pi@x.x.x.x:1

# prerequests on Raspi could be performed by menu item 8)

SRC=~/Comp/Python/MeArm_RaspberryJam/MeArmLib
DST=MeArmLib
RDISP=":1"
VNCPW=raspi
ICS=ICS_eth0
ICSSEG='10.42.0.*'

IP=$1 
SAVENV=/var/run/user/$(id -u)/`basename $0`
[ -n "$IP" -a -f $SAVENV ] || IP="`cat $SAVENV 2>/dev/null`"

RASPI=pi@${IP}
[ -n "$IP" ] && echo -e "Assuming Raspi at $IP\n"

while true; do

echo "-------------------------------------------------------------"
echo "1) activate ICS and determine IP"
echo "2) vncviewer to Raspi (use password $VNCPW)"
echo
echo "4) copy programs to Raspi"
echo "5) get back programs to Raspi"
echo
echo "7) ssh to Raspi"
echo "8) install/prepare ssh public key and tightvncserver on Raspi"
echo "9) install local ICS interface"
echo
echo "0) exit"
echo
read -p "---> Select: " -n1 x
echo -e '\n'
case $x in

1)
# automatically detect Raspi on ICS (Internet Connection Sharing) Connection named ICS_eth0 (nmcli has to be installed and ICS_eth0 created by function 9) on net 10.42.0.0/24
  nmcli con up $ICS | sed -e s/\(.*/.../
  IP="" c=0
  while [ -z "$IP" -a $c -le 5 ]; do  
    #nmap -p 22 --open | egrep 'report' $ICSSEG #--host-timeout 1
    IP="`nmap --host-timeout 1 -p 22 --open $ICSSEG | egrep 'report|open' | tee -a /dev/stderr | grep 'report' | tail -1 | cut -d' ' -f5`"
  c=$(( c+1 ))
  done
  #MAC='b8:27:eb'
  #IP="`arp | grep -i $MAC | cut -d' ' -f1`"
  if [ -z "$IP" ]; then
    echo -e "\n----> Error: no Raspi  MAC ($MAC) found on ethernet with subnet $IP"
    echo -e "           connect the Raspi to this PC ethernet, boot Raspi using a Raspbian SD and try again!\n"
  else
    RASPI=pi@${IP}
    echo -e "\n----> successfully found Raspi on: $RASPI\n"
    echo $IP > $SAVENV
  fi
  ;;

2)
# vncviewer to Raspi
  echo "Connecting to $RASPI --> enter password '$VNCPW' on vncviewer password box..."
  ssh $RASPI -o ConnectTimeout=5 "vncserver $RDISP -geometry 1920x1080 -depth 24"
  if [ $? -eq 255 ]; then
   echo "** Error: unable to connect a Raspi on $RASPI"
  else
    ssh $RASPI "export DISPLAY=$RDISP; cd $DST; [ -n \"\`ps --no-headers -C idle\`\" ] || idle" &
    #echo $VNCPW |vncpasswd >$SRC/.vncpasswd
    vncviewer $IP$RDISP &       # -passwd $SRC/.vncpasswd
  fi
  ;;

4)
# copy files to Raspi
  read -n1 -p "Copy files from this Host to Raspi? <Y/n> " ok
  if [[ ! $ok =~ [Nn](o)* ]]; then
    ssh ${RASPI} "mkdir -p bak $DST; mv $DST/* bak/"
    scp $SRC/*.py ${RASPI}:$DST/ 
    ssh ${RASPI} "cd $DST; chmod test* -r; chmod -w *.py"
  fi
  ;;

5)
# copy files back from Raspi

  read -n1 -p "Copy files back from Raspi? <Y/n> " ok
  if [[ ! $ok =~ [Nn](o)* ]]; then
    mkdir -p $SRC/../bak; cp *.py $SRC/../bak/
    scp pi@${IP}:$DST/\*.py $SRC/
  fi
  ;;

7) 
# remote login by ssh -X so any X client may be started thereafter
  gnome-terminal -e "sh -c 'ssh -X $RASPI'" &
  ;;

8)
# Install/Prepare Raspi
  ssh-keygen -R $IP 
  ssh-copy-id $RASPI
  ssh $RASPI "sudo apt-get update; sudo apt-get -y install tightvncserver"
  # when using a raspbian-lite image, install further: openbox idle libgtk-3-dev python-gi pygobject 
  # for python3 in additon install: idle3 python3-gi python3-tools
  # Remark: When starting tightvncserver the first time, a vnc password of lenth > 5 would be asked
  # to define a shorter password as defined in $VNCPW, the password hash in .vnc/passwd is generated by 'vncpasswd'
  ssh $RASPI "mkdir -p .vnc; echo $VNCPW | tightvncpasswd -f >.vnc/passwd ; chmod go-r .vnc/passwd; tightvncserver"
  ;;

9)
# install local ICS profile
  if=`nmcli device |grep ethernet|head -1|cut -d' ' -f1`
  #if [ -z "`nmcli c | egrep \"$con .* $if\"`" ]; then
  nmcli connection del $ICS
  nmcli connection add type ethernet con-name $ICS ifname $if -- ipv4.method shared
  #fi
  nmcli con up $ICS
  ;;

0) 
  ssh $RASPI "vncserver -kill $RDISP"
  echo "good bye."
  exit
  ;;

esac

done




